/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/settings/clients/[id]/route";
exports.ids = ["app/api/admin/settings/clients/[id]/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&page=%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&page=%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_karthiknaidudintakurthi_Documents_GitHub_scan2ship_src_app_api_admin_settings_clients_id_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/admin/settings/clients/[id]/route.ts */ \"(rsc)/./src/app/api/admin/settings/clients/[id]/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/settings/clients/[id]/route\",\n        pathname: \"/api/admin/settings/clients/[id]\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/settings/clients/[id]/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/karthiknaidudintakurthi/Documents/GitHub/scan2ship/src/app/api/admin/settings/clients/[id]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_karthiknaidudintakurthi_Documents_GitHub_scan2ship_src_app_api_admin_settings_clients_id_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/admin/settings/clients/[id]/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&page=%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/admin/settings/clients/[id]/route.ts":
/*!**********************************************************!*\
  !*** ./src/app/api/admin/settings/clients/[id]/route.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// Encryption key for sensitive data\nconst ENCRYPTION_KEY = process.env.ENCRYPTION_KEY || 'vanitha-logistics-encryption-key-2024';\n// Helper function to encrypt sensitive data\nfunction encrypt(text) {\n    const cipher = crypto__WEBPACK_IMPORTED_MODULE_3___default().createCipher('aes-256-cbc', ENCRYPTION_KEY);\n    let encrypted = cipher.update(text, 'utf8', 'hex');\n    encrypted += cipher.final('hex');\n    return encrypted;\n}\n// Helper function to decrypt sensitive data\nfunction decrypt(encryptedText) {\n    try {\n        const decipher = crypto__WEBPACK_IMPORTED_MODULE_3___default().createDecipher('aes-256-cbc', ENCRYPTION_KEY);\n        let decrypted = decipher.update(encryptedText, 'hex', 'utf8');\n        decrypted += decipher.final('utf8');\n        return decrypted;\n    } catch (error) {\n        console.error('❌ Error decrypting value:', error);\n        return encryptedText;\n    }\n}\n// Helper function to get authenticated admin user\nasync function getAuthenticatedAdmin(request) {\n    const authHeader = request.headers.get('authorization');\n    console.log('🔍 [ADMIN_AUTH] Auth header:', authHeader ? 'Present' : 'Missing');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        console.log('❌ [ADMIN_AUTH] Invalid auth header format');\n        return null;\n    }\n    const token = authHeader.substring(7);\n    console.log('🔍 [ADMIN_AUTH] Token length:', token.length);\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default().verify(token, process.env.JWT_SECRET || 'fallback-secret');\n        console.log('🔍 [ADMIN_AUTH] JWT decoded successfully, userId:', decoded.userId);\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.users.findUnique({\n            where: {\n                id: decoded.userId\n            }\n        });\n        console.log('🔍 [ADMIN_AUTH] User found:', user ? {\n            id: user.id,\n            email: user.email,\n            role: user.role,\n            isActive: user.isActive\n        } : 'null');\n        if (!user) {\n            console.log('❌ [ADMIN_AUTH] User not found');\n            return null;\n        }\n        if (!user.isActive) {\n            console.log('❌ [ADMIN_AUTH] User is not active');\n            return null;\n        }\n        if (user.role !== 'admin' && user.role !== 'master_admin') {\n            console.log('❌ [ADMIN_AUTH] User is not admin or master_admin, role:', user.role);\n            return null;\n        }\n        console.log('✅ [ADMIN_AUTH] Admin authentication successful');\n        return {\n            user: user\n        };\n    } catch (error) {\n        console.error('❌ [ADMIN_AUTH] JWT verification failed:', error);\n        return null;\n    }\n}\nasync function GET(request, { params }) {\n    try {\n        console.log('🚀 [API_ADMIN_CLIENT_CONFIG_GET] Starting request...');\n        // Authenticate admin user\n        const auth = await getAuthenticatedAdmin(request);\n        if (!auth) {\n            console.log('❌ [API_ADMIN_CLIENT_CONFIG_GET] Authentication failed');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { id: clientId } = await params;\n        console.log(`📊 [API_ADMIN_CLIENT_CONFIG_GET] Fetching client configuration for client ${clientId}`);\n        // Get client with all related data\n        let client;\n        try {\n            client = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.clients.findUnique({\n                where: {\n                    id: clientId\n                },\n                include: {\n                    pickup_locations: true,\n                    courier_services: true,\n                    client_order_configs: true,\n                    client_config: true,\n                    _count: {\n                        select: {\n                            users: true,\n                            orders: true\n                        }\n                    }\n                }\n            });\n        } catch (dbError) {\n            console.error('❌ [API_ADMIN_CLIENT_CONFIG_GET] Database error:', dbError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Database error'\n            }, {\n                status: 500\n            });\n        }\n        if (!client) {\n            console.log(`❌ [API_ADMIN_CLIENT_CONFIG_GET] Client not found: ${clientId}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Client not found'\n            }, {\n                status: 404\n            });\n        }\n        console.log(`✅ [API_ADMIN_CLIENT_CONFIG_GET] Client found: ${client.companyName}`);\n        console.log(`📊 [API_ADMIN_CLIENT_CONFIG_GET] Client data:`, {\n            pickupLocations: client.pickup_locations.length,\n            courierServices: client.courier_services.length,\n            clientConfigs: client.client_config.length,\n            hasOrderConfig: !!client.client_order_configs\n        });\n        // Process client configurations and decrypt sensitive data\n        let processedConfigs;\n        try {\n            processedConfigs = client.client_config.map((config)=>{\n                let displayValue = config.value;\n                if (config.isEncrypted && config.value) {\n                    if (config.type === 'password') {\n                        displayValue = '••••••••••••••••';\n                    } else {\n                        displayValue = '***ENCRYPTED***';\n                    }\n                }\n                return {\n                    id: config.id,\n                    key: config.key,\n                    value: config.value,\n                    displayValue: displayValue,\n                    type: config.type,\n                    category: config.category,\n                    description: config.description,\n                    isEncrypted: config.isEncrypted\n                };\n            });\n        } catch (configError) {\n            console.error('❌ [API_ADMIN_CLIENT_CONFIG_GET] Error processing configs:', configError);\n            processedConfigs = [];\n        }\n        // Group configurations by category\n        let configByCategory;\n        try {\n            configByCategory = processedConfigs.reduce((acc, config)=>{\n                if (!acc[config.category]) {\n                    acc[config.category] = [];\n                }\n                acc[config.category].push(config);\n                return acc;\n            }, {});\n        } catch (categoryError) {\n            console.error('❌ [API_ADMIN_CLIENT_CONFIG_GET] Error grouping configs:', categoryError);\n            configByCategory = {};\n        }\n        // Build response object\n        let responseData;\n        try {\n            responseData = {\n                client: {\n                    id: client.id,\n                    name: client.name,\n                    companyName: client.companyName,\n                    email: client.email,\n                    phone: client.phone,\n                    address: client.address,\n                    city: client.city,\n                    state: client.state,\n                    country: client.country,\n                    pincode: client.pincode,\n                    subscriptionPlan: client.subscriptionPlan,\n                    subscriptionStatus: client.subscriptionStatus,\n                    isActive: client.isActive,\n                    _count: client._count\n                },\n                pickupLocations: client.pickup_locations.map((location)=>({\n                        id: location.id,\n                        name: location.label,\n                        value: location.value,\n                        delhiveryApiKey: location.delhiveryApiKey ? '••••••••••••••••' : null,\n                        isActive: true\n                    })),\n                courierServices: client.courier_services.map((service)=>({\n                        id: service.id,\n                        name: service.label,\n                        code: service.value,\n                        isActive: service.isActive,\n                        isDefault: false\n                    })),\n                clientOrderConfig: client.client_order_configs ? {\n                    // Default values\n                    defaultProductDescription: client.client_order_configs.defaultProductDescription,\n                    defaultPackageValue: client.client_order_configs.defaultPackageValue,\n                    defaultWeight: client.client_order_configs.defaultWeight,\n                    defaultTotalItems: client.client_order_configs.defaultTotalItems,\n                    // COD settings\n                    codEnabledByDefault: client.client_order_configs.codEnabledByDefault,\n                    defaultCodAmount: client.client_order_configs.defaultCodAmount,\n                    // Validation rules\n                    minPackageValue: client.client_order_configs.minPackageValue,\n                    maxPackageValue: client.client_order_configs.maxPackageValue,\n                    minWeight: client.client_order_configs.minWeight,\n                    maxWeight: client.client_order_configs.maxWeight,\n                    minTotalItems: client.client_order_configs.minTotalItems,\n                    maxTotalItems: client.client_order_configs.maxTotalItems,\n                    // Field requirements\n                    requireProductDescription: client.client_order_configs.requireProductDescription,\n                    requirePackageValue: client.client_order_configs.requirePackageValue,\n                    requireWeight: client.client_order_configs.requireWeight,\n                    requireTotalItems: client.client_order_configs.requireTotalItems\n                } : null,\n                orderConfig: {\n                    autoAssignTracking: configByCategory.order?.find((c)=>c.key === 'AUTO_ASSIGN_TRACKING')?.value === 'true' || false,\n                    requireTrackingNumber: configByCategory.order?.find((c)=>c.key === 'REQUIRE_TRACKING')?.value === 'true' || false,\n                    defaultCourierService: configByCategory.order?.find((c)=>c.key === 'DEFAULT_COURIER')?.value || ''\n                },\n                configs: processedConfigs.filter((config)=>config.category !== 'pickup'),\n                configByCategory: Object.fromEntries(Object.entries(configByCategory).filter(([category])=>category !== 'pickup'))\n            };\n        } catch (responseError) {\n            console.error('❌ [API_ADMIN_CLIENT_CONFIG_GET] Error building response:', responseError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Error building response'\n            }, {\n                status: 500\n            });\n        }\n        console.log(`✅ [API_ADMIN_CLIENT_CONFIG_GET] Client configuration retrieved for client ${clientId}`);\n        console.log(`📊 [API_ADMIN_CLIENT_CONFIG_GET] Response data structure:`, {\n            hasClient: !!responseData.client,\n            hasPickupLocations: !!responseData.pickupLocations,\n            hasCourierServices: !!responseData.courierServices,\n            hasClientOrderConfig: !!responseData.clientOrderConfig,\n            hasOrderConfig: !!responseData.orderConfig,\n            configsCount: responseData.configs.length\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            config: responseData\n        });\n    } catch (error) {\n        console.error('❌ [API_ADMIN_CLIENT_CONFIG_GET] Unexpected error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to fetch client configuration'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request, { params }) {\n    try {\n        // Authenticate admin user\n        const auth = await getAuthenticatedAdmin(request);\n        if (!auth) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { id: clientId } = await params;\n        const updateData = await request.json();\n        console.log(`📝 [API_ADMIN_CLIENT_CONFIG_PUT] Updating client configuration for client ${clientId}`);\n        // Update client basic information\n        if (updateData.client) {\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.clients.update({\n                where: {\n                    id: clientId\n                },\n                data: {\n                    name: updateData.client.name,\n                    companyName: updateData.client.companyName,\n                    email: updateData.client.email,\n                    phone: updateData.client.phone,\n                    address: updateData.client.address,\n                    city: updateData.client.city,\n                    state: updateData.client.state,\n                    country: updateData.client.country,\n                    pincode: updateData.client.pincode,\n                    isActive: updateData.client.isActive,\n                    updatedAt: new Date()\n                }\n            });\n        }\n        // Update client configurations\n        if (updateData.configs) {\n            const updatePromises = updateData.configs.map(async (config)=>{\n                let valueToStore = config.value;\n                // Don't encrypt any keys - store as plain text\n                // if (config.isEncrypted && config.value && !config.value.startsWith('••••••••••••••••')) {\n                //   valueToStore = encrypt(config.value);\n                // }\n                return _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.client_config.upsert({\n                    where: {\n                        clientId_key: {\n                            clientId,\n                            key: config.key\n                        }\n                    },\n                    update: {\n                        value: valueToStore,\n                        isEncrypted: false,\n                        updatedAt: new Date()\n                    },\n                    create: {\n                        id: `config-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                        clientId,\n                        key: config.key,\n                        value: valueToStore,\n                        type: config.type,\n                        category: config.category,\n                        description: config.description,\n                        isEncrypted: false,\n                        updatedAt: new Date()\n                    }\n                });\n            });\n            await Promise.all(updatePromises);\n        }\n        // Update pickup locations\n        if (updateData.pickupLocations) {\n            // First, delete existing pickup locations\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.pickup_locations.deleteMany({\n                where: {\n                    clientId\n                }\n            });\n            // Then create new ones\n            if (updateData.pickupLocations.length > 0) {\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.pickup_locations.createMany({\n                    data: updateData.pickupLocations.map((location)=>({\n                            id: `pickup-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                            clientId,\n                            value: location.value,\n                            label: location.name,\n                            delhiveryApiKey: location.delhiveryApiKey && !location.delhiveryApiKey.startsWith('••••••••••••••••') ? location.delhiveryApiKey // Don't encrypt - store as plain text\n                             : location.delhiveryApiKey\n                        }))\n                });\n            }\n            // Clear pickup location cache for all clients since we can't target specific client cache\n            console.log('🧹 [API_ADMIN_CLIENT_CONFIG_PUT] Clearing pickup location cache after update');\n            try {\n                // Import and clear cache\n                const { clearPickupLocationCache } = await __webpack_require__.e(/*! import() */ \"_rsc_src_lib_pickup-location-config_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/pickup-location-config */ \"(rsc)/./src/lib/pickup-location-config.ts\"));\n                clearPickupLocationCache();\n                console.log('✅ [API_ADMIN_CLIENT_CONFIG_PUT] Pickup location cache cleared');\n            } catch (error) {\n                console.warn('⚠️ [API_ADMIN_CLIENT_CONFIG_PUT] Could not clear pickup location cache:', error);\n            }\n        }\n        // Update courier services\n        if (updateData.courierServices) {\n            // First, delete existing courier services\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.courier_services.deleteMany({\n                where: {\n                    clientId\n                }\n            });\n            // Then create new ones\n            if (updateData.courierServices.length > 0) {\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.courier_services.createMany({\n                    data: updateData.courierServices.map((service)=>({\n                            id: `courier-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                            clientId,\n                            value: service.code,\n                            label: service.name,\n                            isActive: service.isActive\n                        }))\n                });\n            }\n            // Clear courier service cache for all clients since we can't target specific client cache\n            console.log('🧹 [API_ADMIN_CLIENT_CONFIG_PUT] Clearing courier service cache after update');\n            try {\n                // Import and clear cache\n                const { clearCourierServiceCache } = await __webpack_require__.e(/*! import() */ \"_rsc_src_lib_courier-service-config_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/courier-service-config */ \"(rsc)/./src/lib/courier-service-config.ts\"));\n                clearCourierServiceCache();\n                console.log('✅ [API_ADMIN_CLIENT_CONFIG_PUT] Courier service cache cleared');\n            } catch (error) {\n                console.warn('⚠️ [API_ADMIN_CLIENT_CONFIG_PUT] Could not clear courier service cache:', error);\n            }\n        }\n        // Update client order configuration\n        if (updateData.clientOrderConfig) {\n            console.log('📝 [API_ADMIN_CLIENT_CONFIG_PUT] Updating client order configuration');\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.client_order_configs.upsert({\n                where: {\n                    clientId\n                },\n                update: {\n                    // Default values\n                    defaultProductDescription: updateData.clientOrderConfig.defaultProductDescription,\n                    defaultPackageValue: updateData.clientOrderConfig.defaultPackageValue,\n                    defaultWeight: updateData.clientOrderConfig.defaultWeight,\n                    defaultTotalItems: updateData.clientOrderConfig.defaultTotalItems,\n                    // COD settings\n                    codEnabledByDefault: updateData.clientOrderConfig.codEnabledByDefault,\n                    defaultCodAmount: updateData.clientOrderConfig.defaultCodAmount,\n                    // Validation rules\n                    minPackageValue: updateData.clientOrderConfig.minPackageValue,\n                    maxPackageValue: updateData.clientOrderConfig.maxPackageValue,\n                    minWeight: updateData.clientOrderConfig.minWeight,\n                    maxWeight: updateData.clientOrderConfig.maxWeight,\n                    minTotalItems: updateData.clientOrderConfig.minTotalItems,\n                    maxTotalItems: updateData.clientOrderConfig.maxTotalItems,\n                    // Field requirements\n                    requireProductDescription: updateData.clientOrderConfig.requireProductDescription,\n                    requirePackageValue: updateData.clientOrderConfig.requirePackageValue,\n                    requireWeight: updateData.clientOrderConfig.requireWeight,\n                    requireTotalItems: updateData.clientOrderConfig.requireTotalItems\n                },\n                create: {\n                    id: `order-config-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                    clientId,\n                    // Default values\n                    defaultProductDescription: updateData.clientOrderConfig.defaultProductDescription,\n                    defaultPackageValue: updateData.clientOrderConfig.defaultPackageValue,\n                    defaultWeight: updateData.clientOrderConfig.defaultWeight,\n                    defaultTotalItems: updateData.clientOrderConfig.defaultTotalItems,\n                    // COD settings\n                    codEnabledByDefault: updateData.clientOrderConfig.codEnabledByDefault,\n                    defaultCodAmount: updateData.clientOrderConfig.defaultCodAmount,\n                    // Validation rules\n                    minPackageValue: updateData.clientOrderConfig.minPackageValue,\n                    maxPackageValue: updateData.clientOrderConfig.maxPackageValue,\n                    minWeight: updateData.clientOrderConfig.minWeight,\n                    maxWeight: updateData.clientOrderConfig.maxWeight,\n                    minTotalItems: updateData.clientOrderConfig.minTotalItems,\n                    maxTotalItems: updateData.clientOrderConfig.maxTotalItems,\n                    // Field requirements\n                    requireProductDescription: updateData.clientOrderConfig.requireProductDescription,\n                    requirePackageValue: updateData.clientOrderConfig.requirePackageValue,\n                    requireWeight: updateData.clientOrderConfig.requireWeight,\n                    requireTotalItems: updateData.clientOrderConfig.requireTotalItems\n                }\n            });\n            // Clear order config cache\n            console.log('🧹 [API_ADMIN_CLIENT_CONFIG_PUT] Clearing order config cache after update');\n            try {\n                // Import and clear cache\n                const { clearOrderConfigCache } = await __webpack_require__.e(/*! import() */ \"_rsc_src_lib_order-config_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/order-config */ \"(rsc)/./src/lib/order-config.ts\"));\n                clearOrderConfigCache();\n                console.log('✅ [API_ADMIN_CLIENT_CONFIG_PUT] Order config cache cleared');\n            } catch (error) {\n                console.warn('⚠️ [API_ADMIN_CLIENT_CONFIG_PUT] Could not clear order config cache:', error);\n            }\n        }\n        console.log(`✅ [API_ADMIN_CLIENT_CONFIG_PUT] Client configuration updated for client ${clientId}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Client configuration updated successfully'\n        });\n    } catch (error) {\n        console.error('❌ [API_ADMIN_CLIENT_CONFIG_PUT] Error updating client config:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to update client configuration'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/admin/settings/clients/[id]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/config.ts":
/*!***************************!*\
  !*** ./src/lib/config.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   validateConfig: () => (/* binding */ validateConfig)\n/* harmony export */ });\n// Environment configuration with validation\nconst config = {\n    database: {\n        url: process.env.DATABASE_URL\n    },\n    jwt: {\n        secret: process.env.JWT_SECRET || 'fallback-secret'\n    },\n    app: {\n        name: process.env.NEXT_PUBLIC_APP_NAME || 'Vanitha Logistics',\n        url: process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'\n    },\n    delhivery: {\n        baseUrl: process.env.DELHIVERY_BASE_URL || 'https://track.delhivery.com',\n        webhookSecret: process.env.DELHIVERY_WEBHOOK_SECRET\n    },\n    openai: {\n        apiKey: process.env.OPENAI_API_KEY,\n        model: process.env.OPENAI_MODEL || 'gpt-4o-mini'\n    }\n};\n// Validate required environment variables only at runtime\nfunction validateConfig() {\n    // Skip validation during build time completely\n    if (false) {}\n    return true;\n}\n// Export for use in other files\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw0Q0FBNEM7QUFDckMsTUFBTUEsU0FBUztJQUNwQkMsVUFBVTtRQUNSQyxLQUFLQyxRQUFRQyxHQUFHLENBQUNDLFlBQVk7SUFDL0I7SUFDQUMsS0FBSztRQUNIQyxRQUFRSixRQUFRQyxHQUFHLENBQUNJLFVBQVUsSUFBSTtJQUNwQztJQUNBQyxLQUFLO1FBQ0hDLE1BQU1QLFFBQVFDLEdBQUcsQ0FBQ08sb0JBQW9CLElBQUk7UUFDMUNULEtBQUtDLFFBQVFDLEdBQUcsQ0FBQ1EsbUJBQW1CLElBQUk7SUFDMUM7SUFDQUMsV0FBVztRQUNUQyxTQUFTWCxRQUFRQyxHQUFHLENBQUNXLGtCQUFrQixJQUFJO1FBQzNDQyxlQUFlYixRQUFRQyxHQUFHLENBQUNhLHdCQUF3QjtJQUNyRDtJQUNBQyxRQUFRO1FBQ05DLFFBQVFoQixRQUFRQyxHQUFHLENBQUNnQixjQUFjO1FBQ2xDQyxPQUFPbEIsUUFBUUMsR0FBRyxDQUFDa0IsWUFBWSxJQUFJO0lBQ3JDO0FBQ0YsRUFBRTtBQUVGLDBEQUEwRDtBQUNuRCxTQUFTQztJQUNkLCtDQUErQztJQUMvQyxJQUFJcEIsS0FFeUIsRUFBRSxFQVc5QjtJQUVELE9BQU87QUFDVDtBQUVBLGdDQUFnQztBQUNoQyxpRUFBZUgsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2thcnRoaWtuYWlkdWRpbnRha3VydGhpL0RvY3VtZW50cy9HaXRIdWIvc2NhbjJzaGlwL3NyYy9saWIvY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVudmlyb25tZW50IGNvbmZpZ3VyYXRpb24gd2l0aCB2YWxpZGF0aW9uXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBkYXRhYmFzZToge1xuICAgIHVybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLFxuICB9LFxuICBqd3Q6IHtcbiAgICBzZWNyZXQ6IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgJ2ZhbGxiYWNrLXNlY3JldCcsXG4gIH0sXG4gIGFwcDoge1xuICAgIG5hbWU6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQUF9OQU1FIHx8ICdWYW5pdGhhIExvZ2lzdGljcycsXG4gICAgdXJsOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjMwMDAnLFxuICB9LFxuICBkZWxoaXZlcnk6IHtcbiAgICBiYXNlVXJsOiBwcm9jZXNzLmVudi5ERUxISVZFUllfQkFTRV9VUkwgfHwgJ2h0dHBzOi8vdHJhY2suZGVsaGl2ZXJ5LmNvbScsXG4gICAgd2ViaG9va1NlY3JldDogcHJvY2Vzcy5lbnYuREVMSElWRVJZX1dFQkhPT0tfU0VDUkVULFxuICB9LFxuICBvcGVuYWk6IHtcbiAgICBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZLFxuICAgIG1vZGVsOiBwcm9jZXNzLmVudi5PUEVOQUlfTU9ERUwgfHwgJ2dwdC00by1taW5pJyxcbiAgfSxcbn07XG5cbi8vIFZhbGlkYXRlIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcyBvbmx5IGF0IHJ1bnRpbWVcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUNvbmZpZygpIHtcbiAgLy8gU2tpcCB2YWxpZGF0aW9uIGR1cmluZyBidWlsZCB0aW1lIGNvbXBsZXRlbHlcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgXG4gICAgICB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyAmJiBcbiAgICAgICFwcm9jZXNzLmVudi5WRVJDRUxfQlVJTEQpIHtcbiAgICBjb25zdCByZXF1aXJlZCA9IFsnREFUQUJBU0VfVVJMJywgJ0pXVF9TRUNSRVQnXTtcbiAgICBjb25zdCBtaXNzaW5nID0gcmVxdWlyZWQuZmlsdGVyKGtleSA9PiAhcHJvY2Vzcy5lbnZba2V5XSk7XG4gICAgXG4gICAgaWYgKG1pc3NpbmcubGVuZ3RoID4gMCkge1xuICAgICAgY29uc29sZS5lcnJvcignTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXM6JywgbWlzc2luZyk7XG4gICAgICBjb25zb2xlLmVycm9yKCdBdmFpbGFibGUgZW52aXJvbm1lbnQgdmFyaWFibGVzOicsIE9iamVjdC5rZXlzKHByb2Nlc3MuZW52KSk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc3NpbmcgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzOiAke21pc3Npbmcuam9pbignLCAnKX1gKTtcbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0Vudmlyb25tZW50IGNvbmZpZ3VyYXRpb24gdmFsaWRhdGVkIHN1Y2Nlc3NmdWxseScpO1xuICB9XG4gIFxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gRXhwb3J0IGZvciB1c2UgaW4gb3RoZXIgZmlsZXNcbmV4cG9ydCBkZWZhdWx0IGNvbmZpZztcbiJdLCJuYW1lcyI6WyJjb25maWciLCJkYXRhYmFzZSIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJqd3QiLCJzZWNyZXQiLCJKV1RfU0VDUkVUIiwiYXBwIiwibmFtZSIsIk5FWFRfUFVCTElDX0FQUF9OQU1FIiwiTkVYVF9QVUJMSUNfQVBQX1VSTCIsImRlbGhpdmVyeSIsImJhc2VVcmwiLCJERUxISVZFUllfQkFTRV9VUkwiLCJ3ZWJob29rU2VjcmV0IiwiREVMSElWRVJZX1dFQkhPT0tfU0VDUkVUIiwib3BlbmFpIiwiYXBpS2V5IiwiT1BFTkFJX0FQSV9LRVkiLCJtb2RlbCIsIk9QRU5BSV9NT0RFTCIsInZhbGlkYXRlQ29uZmlnIiwiVkVSQ0VMX0JVSUxEIiwicmVxdWlyZWQiLCJtaXNzaW5nIiwiZmlsdGVyIiwia2V5IiwibGVuZ3RoIiwiY29uc29sZSIsImVycm9yIiwiT2JqZWN0Iiwia2V5cyIsIkVycm9yIiwiam9pbiIsImxvZyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(rsc)/./src/lib/config.ts\");\n\n\n// Debug environment variables more explicitly\nconsole.log('=== PRISMA INITIALIZATION DEBUG ===');\nconsole.log('NODE_ENV:', \"development\");\nconsole.log('VERCEL_ENV:', process.env.VERCEL_ENV);\nconsole.log('DATABASE_URL from process.env:', process.env.DATABASE_URL ? 'SET' : 'NOT SET');\nconsole.log('DATABASE_URL from config:', _config__WEBPACK_IMPORTED_MODULE_1__.config.database.url ? 'SET' : 'NOT SET');\nconsole.log('All env vars with DATABASE:', Object.keys(process.env).filter((key)=>key.includes('DATABASE')));\nconsole.log('===================================');\n// Ensure DATABASE_URL is available\nif (!process.env.DATABASE_URL) {\n    console.error('CRITICAL: DATABASE_URL is missing from process.env');\n    console.error('Available environment variables:', Object.keys(process.env));\n    throw new Error('DATABASE_URL environment variable is not set');\n}\n// Use a single Prisma instance with proper connection management\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL\n        }\n    },\n    log: [\n        'query',\n        'info',\n        'warn',\n        'error'\n    ]\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQ1o7QUFFbEMsOENBQThDO0FBQzlDRSxRQUFRQyxHQUFHLENBQUM7QUFDWkQsUUFBUUMsR0FBRyxDQUFDLGFBYzhDO0FBYjFERCxRQUFRQyxHQUFHLENBQUMsZUFBZUMsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO0FBQ2pESixRQUFRQyxHQUFHLENBQUMsa0NBQWtDQyxRQUFRQyxHQUFHLENBQUNFLFlBQVksR0FBRyxRQUFRO0FBQ2pGTCxRQUFRQyxHQUFHLENBQUMsNkJBQTZCRiwyQ0FBTUEsQ0FBQ08sUUFBUSxDQUFDQyxHQUFHLEdBQUcsUUFBUTtBQUN2RVAsUUFBUUMsR0FBRyxDQUFDLCtCQUErQk8sT0FBT0MsSUFBSSxDQUFDUCxRQUFRQyxHQUFHLEVBQUVPLE1BQU0sQ0FBQ0MsQ0FBQUEsTUFBT0EsSUFBSUMsUUFBUSxDQUFDO0FBQy9GWixRQUFRQyxHQUFHLENBQUM7QUFFWixtQ0FBbUM7QUFDbkMsSUFBSSxDQUFDQyxRQUFRQyxHQUFHLENBQUNFLFlBQVksRUFBRTtJQUM3QkwsUUFBUWEsS0FBSyxDQUFDO0lBQ2RiLFFBQVFhLEtBQUssQ0FBQyxvQ0FBb0NMLE9BQU9DLElBQUksQ0FBQ1AsUUFBUUMsR0FBRztJQUN6RSxNQUFNLElBQUlXLE1BQU07QUFDbEI7QUFFQSxpRUFBaUU7QUFDakUsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJbkIsd0RBQVlBLENBQUM7SUFDL0RvQixhQUFhO1FBQ1hDLElBQUk7WUFDRlosS0FBS0wsUUFBUUMsR0FBRyxDQUFDRSxZQUFZO1FBQy9CO0lBQ0Y7SUFDQUosS0FBSztRQUFDO1FBQVM7UUFBUTtRQUFRO0tBQVE7QUFDekMsR0FBRztBQUVILElBQUlDLElBQXFDLEVBQUVhLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL1VzZXJzL2thcnRoaWtuYWlkdWRpbnRha3VydGhpL0RvY3VtZW50cy9HaXRIdWIvc2NhbjJzaGlwL3NyYy9saWIvcHJpc21hLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4vY29uZmlnJztcblxuLy8gRGVidWcgZW52aXJvbm1lbnQgdmFyaWFibGVzIG1vcmUgZXhwbGljaXRseVxuY29uc29sZS5sb2coJz09PSBQUklTTUEgSU5JVElBTElaQVRJT04gREVCVUcgPT09Jyk7XG5jb25zb2xlLmxvZygnTk9ERV9FTlY6JywgcHJvY2Vzcy5lbnYuTk9ERV9FTlYpO1xuY29uc29sZS5sb2coJ1ZFUkNFTF9FTlY6JywgcHJvY2Vzcy5lbnYuVkVSQ0VMX0VOVik7XG5jb25zb2xlLmxvZygnREFUQUJBU0VfVVJMIGZyb20gcHJvY2Vzcy5lbnY6JywgcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMID8gJ1NFVCcgOiAnTk9UIFNFVCcpO1xuY29uc29sZS5sb2coJ0RBVEFCQVNFX1VSTCBmcm9tIGNvbmZpZzonLCBjb25maWcuZGF0YWJhc2UudXJsID8gJ1NFVCcgOiAnTk9UIFNFVCcpO1xuY29uc29sZS5sb2coJ0FsbCBlbnYgdmFycyB3aXRoIERBVEFCQVNFOicsIE9iamVjdC5rZXlzKHByb2Nlc3MuZW52KS5maWx0ZXIoa2V5ID0+IGtleS5pbmNsdWRlcygnREFUQUJBU0UnKSkpO1xuY29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG5cbi8vIEVuc3VyZSBEQVRBQkFTRV9VUkwgaXMgYXZhaWxhYmxlXG5pZiAoIXByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCkge1xuICBjb25zb2xlLmVycm9yKCdDUklUSUNBTDogREFUQUJBU0VfVVJMIGlzIG1pc3NpbmcgZnJvbSBwcm9jZXNzLmVudicpO1xuICBjb25zb2xlLmVycm9yKCdBdmFpbGFibGUgZW52aXJvbm1lbnQgdmFyaWFibGVzOicsIE9iamVjdC5rZXlzKHByb2Nlc3MuZW52KSk7XG4gIHRocm93IG5ldyBFcnJvcignREFUQUJBU0VfVVJMIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdCBzZXQnKTtcbn1cblxuLy8gVXNlIGEgc2luZ2xlIFByaXNtYSBpbnN0YW5jZSB3aXRoIHByb3BlciBjb25uZWN0aW9uIG1hbmFnZW1lbnRcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz8gbmV3IFByaXNtYUNsaWVudCh7XG4gIGRhdGFzb3VyY2VzOiB7XG4gICAgZGI6IHtcbiAgICAgIHVybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLCAvLyBVc2UgcHJvY2Vzcy5lbnYgZGlyZWN0bHlcbiAgICB9LFxuICB9LFxuICBsb2c6IFsncXVlcnknLCAnaW5mbycsICd3YXJuJywgJ2Vycm9yJ10sXG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiY29uZmlnIiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJlbnYiLCJWRVJDRUxfRU5WIiwiREFUQUJBU0VfVVJMIiwiZGF0YWJhc2UiLCJ1cmwiLCJPYmplY3QiLCJrZXlzIiwiZmlsdGVyIiwia2V5IiwiaW5jbHVkZXMiLCJlcnJvciIsIkVycm9yIiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsImRhdGFzb3VyY2VzIiwiZGIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&page=%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsettings%2Fclients%2F%5Bid%5D%2Froute.ts&appDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthiknaidudintakurthi%2FDocuments%2FGitHub%2Fscan2ship&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();