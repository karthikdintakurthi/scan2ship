"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_order-config_ts";
exports.ids = ["_rsc_src_lib_order-config_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/order-config.ts":
/*!*********************************!*\
  !*** ./src/lib/order-config.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearOrderConfigCache: () => (/* binding */ clearOrderConfigCache),\n/* harmony export */   defaultOrderConfig: () => (/* binding */ defaultOrderConfig),\n/* harmony export */   getOrderConfig: () => (/* binding */ getOrderConfig),\n/* harmony export */   validateOrderData: () => (/* binding */ validateOrderData)\n/* harmony export */ });\n// Default fallback configuration\nconst defaultOrderConfig = {\n    // Default values\n    defaultProductDescription: 'ARTIFICAL JEWELLERY',\n    defaultPackageValue: 5000,\n    defaultWeight: 100,\n    defaultTotalItems: 1,\n    // COD settings\n    codEnabledByDefault: false,\n    defaultCodAmount: undefined,\n    // Validation rules\n    minPackageValue: 100,\n    maxPackageValue: 100000,\n    minWeight: 1,\n    maxWeight: 50000,\n    minTotalItems: 1,\n    maxTotalItems: 100,\n    // Field requirements\n    requireProductDescription: true,\n    requirePackageValue: true,\n    requireWeight: true,\n    requireTotalItems: true\n};\n// Cache for order configuration\nlet orderConfigCache = null;\nlet cacheTimestamp = 0;\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n// Function to fetch order configuration from API\nasync function fetchOrderConfigFromAPI() {\n    try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n            console.warn('No auth token found, using default order config');\n            return defaultOrderConfig;\n        }\n        console.log('üîç [ORDER_CONFIG] Fetching order config from API...');\n        const response = await fetch('/api/order-config', {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        console.log('üîç [ORDER_CONFIG] API response status:', response.status);\n        if (response.ok) {\n            const data = await response.json();\n            console.log('üîç [ORDER_CONFIG] API response data:', data);\n            const config = data.orderConfig || defaultOrderConfig;\n            console.log('üîç [ORDER_CONFIG] Returning config:', config);\n            return config;\n        } else {\n            const errorText = await response.text();\n            console.warn('Failed to fetch order config from API, using default. Status:', response.status, 'Error:', errorText);\n            return defaultOrderConfig;\n        }\n    } catch (error) {\n        console.error('Error fetching order config:', error);\n        return defaultOrderConfig;\n    }\n}\n// Function to get order configuration (with caching)\nasync function getOrderConfig() {\n    const now = Date.now();\n    console.log('üîç [ORDER_CONFIG] getOrderConfig called');\n    console.log('üîç [ORDER_CONFIG] Cache state:', {\n        hasCache: !!orderConfigCache,\n        cacheAge: now - cacheTimestamp,\n        cacheValid: orderConfigCache && now - cacheTimestamp < CACHE_DURATION\n    });\n    // Return cached data if still valid\n    if (orderConfigCache && now - cacheTimestamp < CACHE_DURATION) {\n        console.log('üîç [ORDER_CONFIG] Returning cached data:', orderConfigCache);\n        return orderConfigCache;\n    }\n    console.log('üîç [ORDER_CONFIG] Cache invalid or missing, fetching fresh data');\n    // Fetch fresh data\n    const config = await fetchOrderConfigFromAPI();\n    // Update cache\n    orderConfigCache = config;\n    cacheTimestamp = now;\n    console.log('üîç [ORDER_CONFIG] Updated cache with:', config);\n    return config;\n}\n// Function to clear cache (useful when order config is updated)\nfunction clearOrderConfigCache() {\n    orderConfigCache = null;\n    cacheTimestamp = 0;\n}\n// Helper functions for validation\nasync function validateOrderData(data) {\n    const config = await getOrderConfig();\n    const errors = [];\n    // Validate package value\n    if (data.package_value < config.minPackageValue) {\n        errors.push(`Package value must be at least ‚Çπ${config.minPackageValue}`);\n    }\n    if (data.package_value > config.maxPackageValue) {\n        errors.push(`Package value cannot exceed ‚Çπ${config.maxPackageValue}`);\n    }\n    // Validate weight\n    if (data.weight < config.minWeight) {\n        errors.push(`Weight must be at least ${config.minWeight}g`);\n    }\n    if (data.weight > config.maxWeight) {\n        errors.push(`Weight cannot exceed ${config.maxWeight}g`);\n    }\n    // Validate total items\n    if (data.total_items < config.minTotalItems) {\n        errors.push(`Total items must be at least ${config.minTotalItems}`);\n    }\n    if (data.total_items > config.maxTotalItems) {\n        errors.push(`Total items cannot exceed ${config.maxTotalItems}`);\n    }\n    // Validate required fields\n    if (config.requireProductDescription && (!data.product_description || data.product_description.trim() === '')) {\n        errors.push('Product description is required');\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n// Export default configuration for backward compatibility\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/order-config.ts\n");

/***/ })

};
;