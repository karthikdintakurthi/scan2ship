"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_courier-service-config_ts";
exports.ids = ["_rsc_src_lib_courier-service-config_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/courier-service-config.ts":
/*!*******************************************!*\
  !*** ./src/lib/courier-service-config.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCourierServiceCache: () => (/* binding */ clearCourierServiceCache),\n/* harmony export */   courierServiceConfigs: () => (/* binding */ courierServiceConfigs),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getActiveCourierServices: () => (/* binding */ getActiveCourierServices),\n/* harmony export */   getCourierServiceByValue: () => (/* binding */ getCourierServiceByValue),\n/* harmony export */   getCourierServices: () => (/* binding */ getCourierServices),\n/* harmony export */   getCourierServicesForCod: () => (/* binding */ getCourierServicesForCod),\n/* harmony export */   getCourierServicesForPincode: () => (/* binding */ getCourierServicesForPincode),\n/* harmony export */   getCourierServicesForTracking: () => (/* binding */ getCourierServicesForTracking),\n/* harmony export */   validateCourierServiceRestrictions: () => (/* binding */ validateCourierServiceRestrictions)\n/* harmony export */ });\n// Default fallback configuration\nconst defaultCourierServices = [\n    {\n        value: 'Delhivery',\n        label: 'Delhivery',\n        description: 'Fast and reliable courier service with nationwide coverage',\n        isActive: true,\n        supportsCod: true,\n        supportsTracking: true,\n        apiIntegration: 'delhivery',\n        defaultWeight: 100,\n        defaultPackageValue: 5000,\n        serviceAreas: [\n            'all'\n        ],\n        restrictions: {\n            maxWeight: 50000,\n            maxPackageValue: 100000,\n            minPackageValue: 100,\n            restrictedItems: [\n                'hazardous',\n                'liquids',\n                'perishables'\n            ]\n        }\n    }\n];\n// Cache for courier services\nlet courierServiceCache = null;\nlet cacheTimestamp = 0;\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n// Function to fetch courier services from API\nasync function fetchCourierServicesFromAPI() {\n    try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n            console.warn('No auth token found, using default courier services');\n            return defaultCourierServices;\n        }\n        console.log('üîç [COURIER_SERVICE_CONFIG] Fetching courier services from API...');\n        const response = await fetch('/api/courier-services', {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        console.log('üîç [COURIER_SERVICE_CONFIG] API response status:', response.status);\n        if (response.ok) {\n            const data = await response.json();\n            console.log('üîç [COURIER_SERVICE_CONFIG] API response data:', data);\n            const services = data.courierServices || defaultCourierServices;\n            console.log('üîç [COURIER_SERVICE_CONFIG] Returning services:', services);\n            return services;\n        } else {\n            const errorText = await response.text();\n            console.warn('Failed to fetch courier services from API, using default. Status:', response.status, 'Error:', errorText);\n            return defaultCourierServices;\n        }\n    } catch (error) {\n        console.error('Error fetching courier services:', error);\n        return defaultCourierServices;\n    }\n}\n// Function to get courier services (with caching)\nasync function getCourierServices() {\n    const now = Date.now();\n    console.log('üîç [COURIER_SERVICE_CONFIG] getCourierServices called');\n    console.log('üîç [COURIER_SERVICE_CONFIG] Cache state:', {\n        hasCache: !!courierServiceCache,\n        cacheAge: now - cacheTimestamp,\n        cacheValid: courierServiceCache && now - cacheTimestamp < CACHE_DURATION\n    });\n    // Return cached data if still valid\n    if (courierServiceCache && now - cacheTimestamp < CACHE_DURATION) {\n        console.log('üîç [COURIER_SERVICE_CONFIG] Returning cached data:', courierServiceCache);\n        return courierServiceCache;\n    }\n    console.log('üîç [COURIER_SERVICE_CONFIG] Cache invalid or missing, fetching fresh data');\n    // Fetch fresh data\n    const services = await fetchCourierServicesFromAPI();\n    // Update cache\n    courierServiceCache = services;\n    cacheTimestamp = now;\n    console.log('üîç [COURIER_SERVICE_CONFIG] Updated cache with:', services);\n    return services;\n}\n// Function to clear cache (useful when courier services are updated)\nfunction clearCourierServiceCache() {\n    courierServiceCache = null;\n    cacheTimestamp = 0;\n}\n// Legacy support - keep the old array for backward compatibility\nconst courierServiceConfigs = defaultCourierServices;\n// Helper functions - now async\nasync function getActiveCourierServices() {\n    const services = await getCourierServices();\n    return services.filter((service)=>service.isActive);\n}\nasync function getCourierServiceByValue(value) {\n    const services = await getCourierServices();\n    return services.find((service)=>service.value === value);\n}\nasync function getCourierServicesForPincode(pincode) {\n    // For now, return all active services\n    // In the future, this could check pincode against serviceAreas\n    return await getActiveCourierServices();\n}\nasync function getCourierServicesForCod() {\n    const services = await getCourierServices();\n    return services.filter((service)=>service.isActive && service.supportsCod);\n}\nasync function getCourierServicesForTracking() {\n    const services = await getCourierServices();\n    return services.filter((service)=>service.isActive && service.supportsTracking);\n}\nasync function validateCourierServiceRestrictions(courierService, weight, packageValue, items) {\n    console.log('üîç [COURIER_VALIDATION] Validating courier service:', courierService);\n    const services = await getCourierServices();\n    console.log('üîç [COURIER_VALIDATION] Available services:', services.map((s)=>s.value));\n    const service = services.find((s)=>s.value === courierService);\n    if (!service) {\n        console.error('‚ùå [COURIER_VALIDATION] Invalid courier service:', courierService);\n        console.error('‚ùå [COURIER_VALIDATION] Available services:', services.map((s)=>s.value));\n        return {\n            isValid: false,\n            errors: [\n                `Invalid courier service: ${courierService}. Available services: ${services.map((s)=>s.value).join(', ')}`\n            ]\n        };\n    }\n    console.log('‚úÖ [COURIER_VALIDATION] Found service:', service.label);\n    const errors = [];\n    // Check weight restrictions\n    if (service.restrictions?.maxWeight && weight > service.restrictions.maxWeight) {\n        errors.push(`Weight exceeds maximum limit of ${service.restrictions.maxWeight}g`);\n    }\n    // Check package value restrictions\n    if (service.restrictions?.maxPackageValue && packageValue > service.restrictions.maxPackageValue) {\n        errors.push(`Package value exceeds maximum limit of ‚Çπ${service.restrictions.maxPackageValue}`);\n    }\n    if (service.restrictions?.minPackageValue && packageValue < service.restrictions.minPackageValue) {\n        errors.push(`Package value below minimum limit of ‚Çπ${service.restrictions.minPackageValue}`);\n    }\n    // Check restricted items\n    if (items && service.restrictions?.restrictedItems) {\n        const restrictedItems = items.filter((item)=>service.restrictions.restrictedItems.some((restricted)=>item.toLowerCase().includes(restricted.toLowerCase())));\n        if (restrictedItems.length > 0) {\n            errors.push(`Restricted items detected: ${restrictedItems.join(', ')}`);\n        }\n    }\n    console.log('üîç [COURIER_VALIDATION] Validation result:', {\n        isValid: errors.length === 0,\n        errors\n    });\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n// Export the configuration for use in other files\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (courierServiceConfigs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/courier-service-config.ts\n");

/***/ })

};
;