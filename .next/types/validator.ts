// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ../../src/app/admin/add-user/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/add-user/page.js")
  handler satisfies AppPageConfig<"/admin/add-user">
}

// Validate ../../src/app/admin/analytics/clients/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/analytics/clients/[id]/page.js")
  handler satisfies AppPageConfig<"/admin/analytics/clients/[id]">
}

// Validate ../../src/app/admin/analytics/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/analytics/page.js")
  handler satisfies AppPageConfig<"/admin/analytics">
}

// Validate ../../src/app/admin/client-configurations/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/client-configurations/page.js")
  handler satisfies AppPageConfig<"/admin/client-configurations">
}

// Validate ../../src/app/admin/clients/[id]/edit/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/clients/[id]/edit/page.js")
  handler satisfies AppPageConfig<"/admin/clients/[id]/edit">
}

// Validate ../../src/app/admin/clients/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/clients/[id]/page.js")
  handler satisfies AppPageConfig<"/admin/clients/[id]">
}

// Validate ../../src/app/admin/clients/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/clients/page.js")
  handler satisfies AppPageConfig<"/admin/clients">
}

// Validate ../../src/app/admin/login-as-client/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/login-as-client/page.js")
  handler satisfies AppPageConfig<"/admin/login-as-client">
}

// Validate ../../src/app/admin/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../src/app/admin/register-client/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/register-client/page.js")
  handler satisfies AppPageConfig<"/admin/register-client">
}

// Validate ../../src/app/admin/settings/clients/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/settings/clients/[id]/page.js")
  handler satisfies AppPageConfig<"/admin/settings/clients/[id]">
}

// Validate ../../src/app/admin/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/settings/page.js")
  handler satisfies AppPageConfig<"/admin/settings">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/orders/page.tsx
{
  const handler = {} as typeof import("../../src/app/orders/page.js")
  handler satisfies AppPageConfig<"/orders">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/settings/page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ../../src/app/test-auth/page.tsx
{
  const handler = {} as typeof import("../../src/app/test-auth/page.js")
  handler satisfies AppPageConfig<"/test-auth">
}

// Validate ../../src/app/test-login/page.tsx
{
  const handler = {} as typeof import("../../src/app/test-login/page.js")
  handler satisfies AppPageConfig<"/test-login">
}

// Validate ../../src/app/view-orders/page.tsx
{
  const handler = {} as typeof import("../../src/app/view-orders/page.js")
  handler satisfies AppPageConfig<"/view-orders">
}

// Validate ../../src/app/api/admin/client-configurations/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/client-configurations/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/client-configurations">
}

// Validate ../../src/app/api/admin/clients/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/clients/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/clients/[id]">
}

// Validate ../../src/app/api/admin/clients/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/clients/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/clients">
}

// Validate ../../src/app/api/admin/settings/clients/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/settings/clients/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/settings/clients/[id]">
}

// Validate ../../src/app/api/admin/system-config/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/system-config/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/system-config">
}

// Validate ../../src/app/api/analytics/clients/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/clients/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/clients/[id]">
}

// Validate ../../src/app/api/analytics/clients/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/clients/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/clients">
}

// Validate ../../src/app/api/analytics/platform/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/platform/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/platform">
}

// Validate ../../src/app/api/analytics/track/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/track/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/track">
}

// Validate ../../src/app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../src/app/api/auth/register-client/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/register-client/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/register-client">
}

// Validate ../../src/app/api/auth/register-user/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/register-user/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/register-user">
}

// Validate ../../src/app/api/auth/switch-to-client/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/switch-to-client/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/switch-to-client">
}

// Validate ../../src/app/api/auth/verify/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/verify/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/verify">
}

// Validate ../../src/app/api/courier-services/route.ts
{
  const handler = {} as typeof import("../../src/app/api/courier-services/route.js")
  handler satisfies RouteHandlerConfig<"/api/courier-services">
}

// Validate ../../src/app/api/format-address-image/route.ts
{
  const handler = {} as typeof import("../../src/app/api/format-address-image/route.js")
  handler satisfies RouteHandlerConfig<"/api/format-address-image">
}

// Validate ../../src/app/api/format-address/route.ts
{
  const handler = {} as typeof import("../../src/app/api/format-address/route.js")
  handler satisfies RouteHandlerConfig<"/api/format-address">
}

// Validate ../../src/app/api/order-config/route.ts
{
  const handler = {} as typeof import("../../src/app/api/order-config/route.js")
  handler satisfies RouteHandlerConfig<"/api/order-config">
}

// Validate ../../src/app/api/orders/[id]/retry-delhivery/route.ts
{
  const handler = {} as typeof import("../../src/app/api/orders/[id]/retry-delhivery/route.js")
  handler satisfies RouteHandlerConfig<"/api/orders/[id]/retry-delhivery">
}

// Validate ../../src/app/api/orders/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/orders/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/orders/[id]">
}

// Validate ../../src/app/api/orders/[id]/shipping-label/route.ts
{
  const handler = {} as typeof import("../../src/app/api/orders/[id]/shipping-label/route.js")
  handler satisfies RouteHandlerConfig<"/api/orders/[id]/shipping-label">
}

// Validate ../../src/app/api/orders/route.ts
{
  const handler = {} as typeof import("../../src/app/api/orders/route.js")
  handler satisfies RouteHandlerConfig<"/api/orders">
}

// Validate ../../src/app/api/pickup-locations/route.ts
{
  const handler = {} as typeof import("../../src/app/api/pickup-locations/route.js")
  handler satisfies RouteHandlerConfig<"/api/pickup-locations">
}

// Validate ../../src/app/api/test-admin/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test-admin/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-admin">
}

// Validate ../../src/app/api/test-clear-cache/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test-clear-cache/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-clear-cache">
}

// Validate ../../src/app/api/test-whatsapp/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test-whatsapp/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-whatsapp">
}

// Validate ../../src/app/api/validate-pincode/route.ts
{
  const handler = {} as typeof import("../../src/app/api/validate-pincode/route.js")
  handler satisfies RouteHandlerConfig<"/api/validate-pincode">
}





// Validate ../../src/app/admin/layout.tsx
{
  const handler = {} as typeof import("../../src/app/admin/layout.js")
  handler satisfies LayoutConfig<"/admin">
}

// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
